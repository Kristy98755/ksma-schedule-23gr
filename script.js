document.addEventListener("DOMContentLoaded", function() {
    const groupId = 51; // ID –≥—Ä—É–ø–ø—ã
    const currWeekEl = document.getElementById("CurrWeek");
    const nextWeekEl = document.getElementById("NextWeek");

    // üîπ Overrides: –∫–ª—é—á ‚Üí –∑–Ω–∞—á–µ–Ω–∏–µ
    const overrides = {

        // GLOBAL
        "–ë–æ–ª—å—à–æ–π –º–æ—Ä—Ñ–æ–ª–æ–≥–∏—á.–ª–µ–∫—Ü.–∑–∞–ª": "–ë–ú–ó",
        "311 (—Ñ–∞–∫.—Ç–µ—Ä.)": "",
		"(—Ñ–∞–∫.—Ç–µ—Ä.)": "",
// 'Invalid Date':"",
        "–£—á–µ–±–Ω–∞—è –∞—É–¥.-": "–∫–∞–±–∏–Ω–µ—Ç ‚Ññ",
        "–†–î–õ–¶ –ø—Ä–∏ –ö–ì–ú–ê, 3 —ç—Ç–∞–∂, –£—á–µ–±–Ω—ã–π –∫–∞–±.- 311 (—Ñ–∞–∫.—Ç–µ—Ä.)": "–ú–µ–¥—Ü–µ–Ω—Ç—Ä –ö–ì–ú–ê (–ø–æ –¢—ã–Ω—ã—Å—Ç–∞–Ω–æ–≤–∞), 401 –∫–∞–±–∏–Ω–µ—Ç",
        "–∫–ª–∏–Ω.–ê—Ö—É–Ω–±–∞–µ–≤–∞, 3 —ç—Ç–∞–∂, –ö–∞–±.–∑–∞–≤.–∫–∞—Ñ.-301 (–ø—Ä–æ–ø.—Ö–∏—Ä)": "–ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –≥–æ—Å–ø–∏—Ç–∞–ª—å (–¢–æ–≥–æ–ª–æ–∫ –ú–æ–ª–¥–æ 1/13)",
        "–∫–ª–∏–Ω.–ê—Ö—É–Ω–±–∞–µ–≤–∞, 2 —ç—Ç–∞–∂, –õ–µ–∫—Ü.–∑–∞–ª-–ë–•–ó (–ø—Ä–æ–ø.—Ö–∏—Ä.)": "–ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –≥–æ—Å–ø–∏—Ç–∞–ª—å (–¢–æ–≥–æ–ª–æ–∫ –ú–æ–ª–¥–æ 1/13)",
		// "–∫–ª–∏–Ω.–ê—Ö—É–Ω–±–∞–µ–≤–∞, 3 —ç—Ç–∞–∂, –ö–∞–±.–∑–∞–≤.–∫–∞—Ñ.-301 (–ø—Ä–æ–ø.—Ö–∏—Ä)": "<a href='https://go.2gis.com/vTyEj' style='color:green; text-shadow:none; -webkit-text-stroke:0;'>–ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –≥–æ—Å–ø–∏—Ç–∞–ª—å (–¢–æ–≥–æ–ª–æ–∫ –ú–æ–ª–¥–æ 1/13)</a>",
        // "–∫–ª–∏–Ω.–ê—Ö—É–Ω–±–∞–µ–≤–∞, 2 —ç—Ç–∞–∂, –õ–µ–∫—Ü.–∑–∞–ª-–ë–•–ó (–ø—Ä–æ–ø.—Ö–∏—Ä.)": "<a href='https://go.2gis.com/vTyEj' style='color:green; text-shadow:none; -webkit-text-stroke:0;'>–ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –≥–æ—Å–ø–∏—Ç–∞–ª—å (–¢–æ–≥–æ–ª–æ–∫ –ú–æ–ª–¥–æ 1/13)</a>",
        "(–æ–±—â.–≥.)": "",
		"–ü—Ä–æ–ø–µ–¥–µ–≤—Ç–∏–∫–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö –±–æ–ª–µ–∑–Ω–µ–π (—Ñ–∞–∫.—Ç–µ—Ä)":"–ü—Ä–æ–ø–µ–¥–µ–≤—Ç–∏–∫–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö –±–æ–ª–µ–∑–Ω–µ–π",
		"–ú–µ–¥.—Ü–µ–Ω—Ç—Ä –ø—Ä–∏ –ö–ì–ú–ê, 1 —ç—Ç–∞–∂, –∫–∞–±–∏–Ω–µ—Ç ‚Ññ 109 (–ª—É—á.–¥.)":"–ú–µ–¥—Ü–µ–Ω—Ç—Ä –ö–ì–ú–ê, 1 —ç—Ç–∞–∂, –∫–∞–±–∏–Ω–µ—Ç ‚Ññ109",
        "–ö–∞—Ñ–µ–¥—Ä–∞: –û–±—â–µ–π –≥–∏–≥–∏–µ–Ω—ã": "4 –∫–æ—Ä–ø—É—Å (–≤—Ö–æ–¥ —Å–ø—Ä–∞–≤–∞), –∫–∞–±–∏–Ω–µ—Ç ‚Ññ325",
        "–ì–ª. –∫–æ—Ä–ø—É—Å, 4 —ç—Ç–∞–∂, –∫–∞–±–∏–Ω–µ—Ç ‚Ññ425 (–±–∏–æ—Ö–∏–º.)": "–ì–ª–∞–≤–Ω—ã–π –∫–æ—Ä–ø—É—Å, –∫–∞–±–∏–Ω–µ—Ç ‚Ññ432",
        "–¶–¢–∏–†–ö, 5 —ç—Ç–∞–∂, –£—á–µ–±.–∞—É–¥.-516 (–º–Ω–∏)": "–¶–µ–Ω—Ç—Ä —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è, —Ü–æ–∫–æ–ª—å–Ω—ã–π —ç—Ç–∞–∂",
        "–ì–ª.–∫–æ—Ä–ø—É—Å, 1—ç—Ç., –õ–µ–∫—Ü.–∑–∞–ª ‚Ññ1": "–õ–ó1",
        "–ú–æ—Ä—Ñ–æ.–∫–æ—Ä–ø—É—Å, 1 —ç—Ç–∞–∂, –∫–∞–±–∏–Ω–µ—Ç ‚Ññ114 (–ø–∞—Ç.–∞–Ω–∞—Ç.)": "–ú–æ—Ä—Ñ–æ–∫–æ—Ä–ø—É—Å, –∫–∞–±–∏–Ω–µ—Ç ‚Ññ114",
        "–ö–∞—Ñ–µ–¥—Ä–∞: –ù–æ—Ä–º–∞–ª—å–Ω–æ–π –∏ —Ç–æ–ø–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–π –∞–Ω–∞—Ç–æ–º–∏–∏": "–ú–æ—Ä—Ñ–æ–∫–æ—Ä–ø—É—Å, –∫–∞–±–∏–Ω–µ—Ç ‚Ññ409",
		"–ú–µ–¥.—Ü–µ–Ω—Ç—Ä –ø—Ä–∏ –ö–ì–ú–ê, 1 —ç—Ç–∞–∂, –£—á–µ–±–Ω–∞—è –∞—É–¥.- 109 (–ª—É—á.–¥.)": "–ú–µ–¥—Ü–µ–Ω—Ç—Ä –ö–ì–ú–ê (–≤—Ö–æ–¥ –≤–æ–∑–ª–µ —Ñ–ª—é–æ—Ä–æ–≥—Ä–∞—Ñ–∏–∏), –∫–∞–±–∏–Ω–µ—Ç ‚Ññ109",
		"–ú–µ–¥.—Ü–µ–Ω—Ç—Ä –ø—Ä–∏ –ö–ì–ú–ê, 2 —ç—Ç–∞–∂, —Å–µ–∫—Ü.204, –£—á–µ–±.–∫–∞–±.-204–± (–∫–ª.—Ñ.)":"–ì–ª–∞–≤–Ω—ã–π –∫–æ—Ä–ø—É—Å, 325 –∫–∞–±–∏–Ω–µ—Ç",
		"–ö–∞—Ñ–µ–¥—Ä–∞: –ü–∞—Ç–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–π —Ñ–∏–∑–∏–æ–ª–æ–≥–∏–∏":"–ú–æ—Ä—Ñ–æ–∫–æ—Ä–ø—É—Å, –∞—É–¥–∏—Ç–æ—Ä–∏—è ‚Ññ214",
		"(‚Ññ1)":"",
		"–ö–∞—Ñ–µ–¥—Ä–∞: –ü—Ä–æ–ø–µ–¥–µ–≤—Ç–∏–∫–∏ –¥–µ—Ç—Å–∫–∏—Ö –±–æ–ª–µ–∑–Ω–µ–π":"–¢—Ä–µ—Ç—å—è –¥–µ—Ç—Å–∫–∞—è –±–æ–ª—å–Ω–∏—Ü–∞",

        // TARGETED

        // CURRENT WEEK
        "–ö–ª–∏–Ω–∏—á–µ—Å–∫–∞—è –±–∏–æ—Ö–∏–º–∏—è|–ü—Ä–∞–∫—Ç–∏–∫–∞|CurrWeek": "<a href='biohimia.html'>–ö–ª–∏–Ω–∏—á–µ—Å–∫–∞—è –±–∏–æ—Ö–∏–º–∏—è</a>",
        // "–û–±—â–∞—è –≥–∏–≥–∏–µ–Ω–∞|–ü—Ä–∞–∫—Ç–∏–∫–∞|NextWeek": "<a href='https://jumpshare.com/share/UjFJkBnEZi11mMdmuFls'>–û–±—â–∞—è –≥–∏–≥–∏–µ–Ω–∞</a>",
		"–ü—Ä–æ–ø–µ–¥–µ–≤—Ç–∏–∫–∞ –¥–µ—Ç—Å–∫–∏—Ö –±–æ–ª–µ–∑–Ω–µ–π|–ü—Ä–∞–∫—Ç–∏–∫–∞|CurrWeek":"<a href='https://jumpshare.com/share/2XQAo3Z7vOH7BqQ2oZGL'>–ü—Ä–æ–ø–µ–¥–µ–≤—Ç–∏–∫–∞ –¥–µ—Ç—Å–∫–∏—Ö –±–æ–ª–µ–∑–Ω–µ–π</a>",
        // "–¢–æ–ø–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∞—è –∞–Ω–∞—Ç–æ–º–∏—è|–ü—Ä–∞–∫—Ç–∏–∫–∞|CurrWeek": "<a href='https://chatgpt.com/share/68da1b47-05b8-800b-a282-c820fbc39c90'>–¢–æ–ø–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∞—è –∞–Ω–∞—Ç–æ–º–∏—è</a>",
        // "–ü—Ä–æ–ø–µ–¥–µ–≤—Ç–∏–∫–∞ —Ö–∏—Ä—É—Ä–≥–∏—á–µ—Å–∫–∏—Ö –±–æ–ª–µ–∑–Ω–µ–π|–ü—Ä–∞–∫—Ç–∏–∫–∞|CurrWeek": "<a href='https://jumpshare.com/share/syI8ek5svsVR2PXNsERj'>–ü—Ä–æ–ø–µ–¥—Ö–∏—Ä—É—Ä–≥–∏—è</a>",
		// "–õ—É—á–µ–≤–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞|–ü—Ä–∞–∫—Ç–∏–∫–∞|CurrWeek":"<a href='https://chatgpt.com/s/t_68de359569408191b94740fafc98bcbb'>–õ—É—á–µ–≤–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞</a>",
		// "–ü—Ä–æ–ø–µ–¥–µ–≤—Ç–∏–∫–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö –±–æ–ª–µ–∑–Ω–µ–π|–ü—Ä–∞–∫—Ç–∏–∫–∞|CurrWeek":"<a href='https://jumpshare.com/share/ayqIVZ1CivFZARyipbfa' >–ü—Ä–æ–ø–µ–¥–µ–≤—Ç–∏–∫–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö –±–æ–ª–µ–∑–Ω–µ–π</a>",
		// "–ü–∞—Ç–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –∞–Ω–∞—Ç–æ–º–∏—è|–ü—Ä–∞–∫—Ç–∏–∫–∞|CurrWeek":"<a href='https://jumpshare.com/share/RpGtVgDaPKqKDDnbaWvS'>–ü–∞—Ç–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –∞–Ω–∞—Ç–æ–º–∏—è</a>",
		// "–ü–∞—Ç–æ—Ñ–∏–∑–∏–æ–ª–æ–≥–∏—è|–ü—Ä–∞–∫—Ç–∏–∫–∞|CurrWeek":"<a href='https://jumpshare.com/share/bFouq17EaDhboPQnckgz'>–ü–∞—Ç—Ñ–∏–∑</a>",
		// "–ö–ª–∏–Ω–∏—á–µ—Å–∫–∞—è –±–∏–æ—Ö–∏–º–∏—è|–ü—Ä–∞–∫—Ç–∏–∫–∞|NextWeek": "<a href='https://jumpshare.com/share/Vtj3G9a2IRZP3lIKZ0sB'>–ö–ª–∏–Ω–∏—á–µ—Å–∫–∞—è –±–∏–æ—Ö–∏–º–∏—è</a>",
        // "–û–±—â–∞—è –≥–∏–≥–∏–µ–Ω–∞|–ü—Ä–∞–∫—Ç–∏–∫–∞|NextWeek": "<a href='https://jumpshare.com/share/gdZygLaXlUUUKpbJ1pzm'>–û–±—â–∞—è –≥–∏–≥–∏–µ–Ω–∞</a>",
		"–¢–æ–ø–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∞—è –∞–Ω–∞—Ç–æ–º–∏—è|–ü—Ä–∞–∫—Ç–∏–∫–∞|CurrWeek": "<a href='topan.html'>–¢–æ–ø–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∞—è –∞–Ω–∞—Ç–æ–º–∏—è</a><br><span style='font-size: 12px;'>–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø—Ä–æ—à–ª—É—é —Ç–µ–º—É!</span>",
		// "–ü—Ä–æ–ø–µ–¥–µ–≤—Ç–∏–∫–∞ —Ö–∏—Ä—É—Ä–≥–∏—á–µ—Å–∫–∏—Ö –±–æ–ª–µ–∑–Ω–µ–π|–ü—Ä–∞–∫—Ç–∏–∫–∞|CurrWeek": "<a href='https://jumpshare.com/share/jxMVck4Xdbi0XTRvhkWV'>–ü—Ä–æ–ø–µ–¥—Ö–∏—Ä—É—Ä–≥–∏—è</a>",
		"–ë–∞–∑–∏—Å–Ω–∞—è —Ñ–∞—Ä–º–∞–∫–æ–ª–æ–≥–∏—è|–ü—Ä–∞–∫—Ç–∏–∫–∞|CurrWeek": "<a href='https://jumpshare.com/share/q0mUpyh1NGYBn2YzP9Zz'>–ë–∞–∑–∏—Å–Ω–∞—è —Ñ–∞—Ä–º–∞–∫–æ–ª–æ–≥–∏—è</a>",
		// "–õ—É—á–µ–≤–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞|–ü—Ä–∞–∫—Ç–∏–∫–∞|CurrWeek":"<a href='luch.html'>–õ—É—á–µ–≤–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞</a>",
		// "–ü–∞—Ç–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –∞–Ω–∞—Ç–æ–º–∏—è|–ü—Ä–∞–∫—Ç–∏–∫–∞|NextWeek":"<a href='https://jumpshare.com/share/zrUZiGuQWqKXtCVVJYpM'>–ü–∞—Ç–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –∞–Ω–∞—Ç–æ–º–∏—è</a>"
        // NEXT WEEK
		// "–ê–∫—É—à–µ—Ä—Å—Ç–≤–æ  –∏ –≥–∏–Ω–µ–∫–æ–ª–æ–≥–∏—è|–ü—Ä–∞–∫—Ç–∏–∫–∞|NextWeek": "<a href='https://jumpshare.com/share/htKOZeERaKmApodQWhxp'>–ê–∫—É—à–µ—Ä—Å—Ç–≤–æ –∏ –≥–∏–Ω–µ–∫–æ–ª–æ–≥–∏—è</a>",

		
		
		
		
		
		
		
		// –ó–ê–ì–õ–£–®–ö–ê
		"–ó–ê–ì–õ–£–®–ö–ê":""

    };

    // --- –£—Ç–∏–ª–∏—Ç—ã ---
    function getMonday(d) {
        d = new Date(d);
        const day = d.getDay();
        const diff = d.getDate() - day + (day === 0 ? -6 : 1);
        return new Date(d.setDate(diff));
    }

    function formatDate(d) {
        let month = d.getMonth() + 1;
        let day = d.getDate();
        return `${d.getFullYear()}-${month<10?"0"+month:month}-${day<10?"0"+day:day}`;
    }

    function capitalizeFirst(str) {
        return str.charAt(0).toUpperCase() + str.slice(1);
    }

    // --- Overrides ---
    function applyOverride(span, weekId) {
        const text = span.textContent.trim();
        const typeSpan = span.parentElement.querySelector(".lesson__type");
        const type = typeSpan ? typeSpan.textContent.trim() : "";

        console.log(`[CHECK OVERRIDE] "${text}" | type="${type}" | week="${weekId}"`);

        const keysToCheck = [
            `${text}|${type}|${weekId}`,
            `${text}|${type}`,
            `${text}`
        ];

        for (const key of keysToCheck) {
            if (overrides[key]) {
                console.log(`[APPLY OVERRIDE] ${key} ‚Üí ${overrides[key]}`);
                span.innerHTML = overrides[key];
                return;
            }
        }
        console.log(`[NO MATCH] "${text}"`);
		
		
		document.querySelectorAll('.schedule__date').forEach(el => {
			if (el.textContent.trim() === 'Invalid Date') {
				el.closest('.schedule__day')?.remove();
			}
		});

    }

    function applyOverrideToPlace(span) {
        if (!span) return;
        const text = span.textContent.replace(/\s*^<i.*<\/i>/, '').trim(); // —É–±–∏—Ä–∞–µ–º –∏–∫–æ–Ω–∫—É
        const keysToCheck = [text, text.replace(/\./g, '')]; // –º–æ–∂–Ω–æ —Ä–∞—Å—à–∏—Ä–∏—Ç—å –ø–æ–¥ –Ω—É–∂–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã

        for (const key of keysToCheck) {
            if (overrides[key]) {
                console.log(`[PLACE OVERRIDE] "${text}" ‚Üí ${overrides[key]}`);
                span.innerHTML = overrides[key];
                return;
            }
        }
    }

    function applyOverridesToWeek(container, weekId) {
        const lessons = container.querySelectorAll(".lesson__name");
        lessons.forEach(span => applyOverride(span, weekId));

        const places = container.querySelectorAll(".lesson__place");
        places.forEach(span => applyOverrideToPlace(span));
    }

    // üîπ –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –∑–∞–º–µ–Ω—ã
    function applyGlobalOverrides(container) {
        const walker = document.createTreeWalker(container, NodeFilter.SHOW_TEXT, null, false);
        let node;
        while (node = walker.nextNode()) {
            for (const key in overrides) {
                const safeKey = key.replace(/[.*+?^${}()|[\]\\]/g, "\\$&");
                const regex = new RegExp(safeKey, "g");

                if (regex.test(node.nodeValue)) {
                    const replacement = overrides[key];
                    if (replacement.includes("<")) {
                        console.log(`[GLOBAL HTML] "${node.nodeValue}" ‚Üí "${replacement}"`);
                        const range = document.createRange();
                        range.selectNodeContents(node);
                        const frag = range.createContextualFragment(node.nodeValue.replace(regex, replacement));
                        node.parentNode.replaceChild(frag, node);
                    } else {
                        console.log(`[GLOBAL TEXT] "${node.nodeValue}" ‚Üí "${replacement}"`);
                        node.nodeValue = node.nodeValue.replace(regex, replacement);
                    }
                }
            }
        }
    }

    // --- –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–µ–¥–µ–ª–∏ ---

function loadWeek(monday, container, weekId) {
    const url = `https://ksma-schedule.itismynickname9.workers.dev/proxy/${groupId}/${formatDate(monday)}/get`;
    const key = `schedule_${groupId}_${formatDate(monday)}`;

    // --- –•—Ä–∞–Ω–∏–ª–∏—â–µ ---
    function saveCache(name, data, maxAgeSeconds) {
        const json = JSON.stringify(data);
        try {
            if (json.length <= 3800) {
                document.cookie = `${name}=${encodeURIComponent(json)}; path=/; max-age=${maxAgeSeconds}; SameSite=Lax`;
                console.info(`[cache] saved ${name} in cookie (${(json.length / 1024).toFixed(1)} KB)`);
            } else {
                localStorage.setItem(name, json);
                console.info(`[cache] saved ${name} in localStorage (${(json.length / 1024).toFixed(1)} KB)`);
            }
        } catch (e) {
            console.error(`[cache] failed to save ${name}:`, e);
        }
    }

    function loadCache(name) {
        const match = document.cookie.match(new RegExp('(?:^|; )' + name + '=([^;]*)'));
        if (match) {
            try {
                return JSON.parse(decodeURIComponent(match[1]));
            } catch {
                console.warn(`[cache] cookie parse error for ${name}`);
            }
        }
        const ls = localStorage.getItem(name);
        if (ls) {
            try {
                return JSON.parse(ls);
            } catch {
                console.warn(`[cache] localStorage parse error for ${name}`);
            }
        }
        return null;
    }

    async function fetchWithHybridCache(url, cacheKey, maxAgeSeconds = 60 * 60 * 24) {
        try {
            const response = await fetch(url, { cache: 'no-store' });
            const contentType = response.headers.get('content-type') || '';
            if (!response.ok || !contentType.includes('application/json')) {
                throw new Error(`Bad response: ${response.status}`);
            }

            const data = await response.json();
            saveCache(cacheKey, data, maxAgeSeconds);
            data._source = 'online'; // <--- –æ—Ç–º–µ—Ç–∏–º –∏—Å—Ç–æ—á–Ω–∏–∫
            return data;
        } catch (error) {
            console.warn(`[cache] ${cacheKey}: loading from cache due to error: ${error.message}`);
            const cached = loadCache(cacheKey);
            if (cached) {
                cached._source = 'offline'; // <--- –æ—Ç–º–µ—Ç–∏–º –∏—Å—Ç–æ—á–Ω–∏–∫
                console.info(`[cache] restored ${cacheKey} (offline mode)`);
                return cached;
            }
            console.error(`[cache] no cached data available for ${cacheKey}`);
            return null;
        }
    }

    // --- –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ ---
    fetchWithHybridCache(url, key).then(data => {
        if (!data) {
            container.innerHTML = "<p style='color:red; text-align:center;'>–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ</p>";
            return;
        }

        container.innerHTML = "";
        const scheduleTable = document.createElement("ul");
        scheduleTable.className = "schedule__table";

        for (const dayKey in data) {
            const day = data[dayKey];
            const liDay = document.createElement("li");
            liDay.className = "schedule__day";

            const dateSpan = document.createElement("span");
            dateSpan.className = "schedule__date";
            const dateObj = new Date(day.d);
            const options = { weekday: "long", day: "numeric", month: "long" };
            dateSpan.textContent = capitalizeFirst(dateObj.toLocaleDateString("ru-RU", options));
            liDay.appendChild(dateSpan);

            const lessonsUl = document.createElement("ul");
            lessonsUl.className = "schedule__lessons";

            for (const lessonKey in day.l) {
                const lesson = day.l[lessonKey];
                const lessonLi = document.createElement("li");
                lessonLi.className = "lesson";

                const timeDiv = document.createElement("div");
                timeDiv.className = "lesson__time";
                timeDiv.textContent = lesson.tm;
                lessonLi.appendChild(timeDiv);

                const paramsDiv = document.createElement("div");
                paramsDiv.className = "lesson__params";

                const nameSpan = document.createElement("span");
                nameSpan.className = "lesson__name";
                nameSpan.textContent = lesson.d;
                paramsDiv.appendChild(nameSpan);

                const typeSpan = document.createElement("span");
                typeSpan.className = "lesson__type";
                typeSpan.textContent = lesson.t;
                paramsDiv.appendChild(typeSpan);

                if (lesson.r) {
                    const placeSpan = document.createElement("span");
                    placeSpan.className = "lesson__place";
                    placeSpan.innerHTML = `<i class="icon-marker"></i>${lesson.r}`;
                    paramsDiv.appendChild(placeSpan);
                }

                lessonLi.appendChild(paramsDiv);
                lessonsUl.appendChild(lessonLi);
            }

            liDay.appendChild(lessonsUl);
            scheduleTable.appendChild(liDay);
        }

        container.appendChild(scheduleTable);

        // --- –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞ ---
const statusP = document.createElement("p");
statusP.style.textAlign = "center";
statusP.innerHTML =
    `<b>kgma.kg is <span style="color:${data._source === 'online' ? 'limegreen' : 'red'}">${data._source}</span></b>`;

// –í—Å—Ç–∞–≤–ª—è–µ–º –≤ –∫–æ–Ω–µ—Ü –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
container.appendChild(statusP);


        setTimeout(() => {
            applyGlobalOverrides(container);
            applyOverridesToWeek(container, weekId);
        }, 300);
    });
}


    const monday = getMonday(new Date());
    const nextMonday = new Date(monday);
    nextMonday.setDate(nextMonday.getDate() + 7);

    loadWeek(monday, currWeekEl, "CurrWeek");
    loadWeek(nextMonday, nextWeekEl, "NextWeek");
    nextWeekEl.style.display = "none";

    document.getElementById("cur").onclick = () => {
        currWeekEl.style.display = "block";
        cur.style.backgroundColor = "#27a8e7dd";
        nextWeekEl.style.display = "none";
        next.style.backgroundColor = "#bbdd";
    };
    document.getElementById("next").onclick = () => {
        currWeekEl.style.display = "none";
        next.style.backgroundColor = "#27a8e7dd";
        nextWeekEl.style.display = "block";
        cur.style.backgroundColor = "#bbdd";
    };
	
	
	
	
	// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è —Å—Å—ã–ª–æ–∫
		// –ê–Ω–∏–º–∞—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
	document.addEventListener('click', e => {
	  const link = e.target.closest('a');
	  if (link && link.getAttribute('href') && !link.getAttribute('href').startsWith('#')) {
		const loader = document.querySelector('.loadinganim');
		    if (loader) {
			  loader.classList.add('popup');
			}
	  }
	});

});
